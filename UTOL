#!/bin/bash
cd
echo UTOL/
read input
if [ "$input" == "update" ]; then
echo Update UTOL? All Files In util Folder Will Be Lost, and the new update may be fatal. [y,n]
read input
if [ "$input" == "y" ]; then
cd
sudo rm -rf utol
git clone https://github.com/ABadCoder1234/utol
sudo chmod +x ./utol/install 
./utol/install
S=1
else
echo Cancelled update
fi
fi
if [ "$input" == "help" ]; then
echo Command list
echo update -Updates utol
echo about -Tells info about utol
echo down -Opens download utility
echo gdown -Opens github download utility
echo ctrl+c to cancel utol at any time
sleep 0.9
UTOL
S=1
fi
if [ "$input" == "about" ]; then
echo UTOL --Utility Tool On Linux-- V.0.3.1
echo DU --Download Utility-- kjklk v.1.01
echo GDU -- Git Download Utility-- kjklk-hit v1.0
echo Run help for commands
S=1
fi
if [ "$input" == "down" ]; then
echo Starting kjklk v1.01
sleep 3
echo Enter URL
read input
if [ "$input" == "cancel" ]; then
echo Cancelled
else
cd
cd utol
wget -O SIP $input
echo Save as --No spaces--
read input
mv utol/SIP utol/$input
echo Saved file as $input
S=1
fi
fi
if [ "$input" == "gdown" ]; then
echo Opening kjklk-git v1.0
cd
cd utol
echo Repository URL --username/repo--
read input
if [ "$input" == "cancel" ]; then
echo Cancelled
else
cd
git clone https://github.com/$input
echo Saved repository
S=1
fi
fi
if [ "$input" == "menu" ]; then
echo *u*pdate 
echo *c*hangelog
echo *i*nverse colors
read input
if [ "$input" == "u" ]; then
echo All UTOL files will be lost and the latest exirimental update will be downloaded
echo Continue? [y,n]
read input
if [ "$input" == "y" ]; then
echo Downloading latest update
git clone https://github.com/ABadCoder1234/utol
cd
sudo chmod +x utol/install
utol/install
fi
echo Press any key to continue
read -rsn1 input
S=1
fi
if [ "$input" == "c" ]; then
clear
echo Version pre-1.o changelog 
echo Cleaned up commands a lot, use *help* to see new commands
echo Added menu with changelog and inverse colors
echo 
echo
echo
echo
echo Press any key to continue
read -rsn1 input
S=1
else
if [ "$input" == "i" ]; then
echo 1. Turn it on
echo 2. Turn it off
read -rsn1 input
S=1
if [ "$input" == "1" ]; then
setterm --inversescreen on
echo Setting turned on
sleep 3
else
setterm --inversescreen off
echo Setting turned off
S=1
fi
fi
fi
fi
if [ "$S" == "1" ]; then
sleep 0.6
else
echo Invalid/broken command or operator. If everything went fine ignore this message
fi
